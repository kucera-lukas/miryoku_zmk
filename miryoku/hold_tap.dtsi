// Copyright 2022 Lukas Kucera
// https://github.com/kucera-lukas/miryoku

#include <behaviors.dtsi>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ { \
  behaviors { \
    hold_tap: hold_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "HOLD_TAP";
      #binding-cells = <2>;
      tapping_term_ms = <U_TAPPING_TERM>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };

    out_hold_tap: out_hold_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "OUT_HOLD_TAP";
      #binding-cells = <2>;
      tapping_term_ms = <U_TAPPING_TERM>;
      flavor = "tap-preferred";
      bindings = <&out>, <&out>;
    };

    rgb_hold_tap: rgb_hold_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "RGB_HOLD_TAP";
      #binding-cells = <2>;
      tapping_term_ms = <U_TAPPING_TERM>;
      flavor = "tap-preferred";
      bindings = <&rgb_ug>, <&rgb_ug>;
    };

    ext_power_hold_tap: ext_power_hold_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "EXT_POWER_HOLD_TAP";
      #binding-cells = <2>;
      tapping_term_ms = <U_TAPPING_TERM>;
      flavor = "tap-preferred";
      bindings = <&ext_power>, <&ext_power>;
    };
  };
};

#define HOLD_TAP(hold, tap) &hold_tap hold tap
#define OUT_HOLD_TAP(hold, tap) &out_hold_tap hold tap
#define RGB_HOLD_TAP(hold, tap) &rgb_hold_tap hold tap
#define EXT_POWER_HOLD_TAP(hold, tap) &ext_power_hold_tap hold tap
