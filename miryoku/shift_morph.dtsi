// Copyright 2022 Lukas Kucera
// https://github.com/kucera-lukas/miryoku

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define SHIFT_MORPH(NAME, BINDING, SHIFT_BINDING) \
/ { \
  behaviors { \
    NAME: NAME { \
      compatible = "zmk,behavior-mod-morph"; \
      label = U_STRINGIFY(NAME); \
      #binding-cells = <0>; \
      bindings = <BINDING>, <SHIFT_BINDING>; \
      mods = <(MOD_LSFT|MOD_RSFT)>; \
    }; \
  }; \
};

SHIFT_MORPH(u_dot_bang, &kp DOT, &kp EXCLAMATION)
SHIFT_MORPH(u_under_minus, &kp UNDERSCORE, &kp MINUS)
SHIFT_MORPH(u_comma_question, &kp COMMA, &kp QUESTION)
SHIFT_MORPH(u_double_single, &kp DOUBLE_QUOTES, &kp SINGLE_QUOTE)

/ {
  behaviors {
    u_caps_word: u_caps_word {
      compatible = "zmk,behavior-caps-word";
      label = "U_CAPS_WORD";
      #binding-cells = <0>;
      mods = <MOD_LSFT>;
      continue-list = <A B C D E F G H I J K L M N O P Q R S T U V W X Y Z N0 N1 N2 N3 N4 N5 N6 N7 N8 N9 BACKSPACE DELETE COMMA UNDERSCORE EQUAL MINUS LEFT RIGHT DOLLAR>;
    };
  };
};

SHIFT_MORPH(u_caps_word_caps, &u_caps_word, &kp CAPS)

/ {
  behaviors {
    u_dot_bang_tap_mt: u_dot_bang_tap_mt {
      compatible = "zmk,behavior-hold-tap";
      label = "u_dot_bang_tap_mt";
      #binding-cells = <2>;
      tapping_term_ms = <U_TAPPING_TERM>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&u_dot_bang>;
    };
  };
};

/ {
  behaviors {
    u_comma_question_tap_lt: u_comma_question_tap_lt {
      compatible = "zmk,behavior-hold-tap";
      label = "u_comma_question_tap_lt";
      #binding-cells = <2>;
      tapping_term_ms = <U_TAPPING_TERM>;
      flavor = "tap-preferred";
      bindings = <&mo>, <&u_comma_question>;
    };
  };
};
